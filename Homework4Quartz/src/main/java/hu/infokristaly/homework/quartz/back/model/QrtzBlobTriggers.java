package hu.infokristaly.homework.quartz.back.model;

// Generated 2012.10.09. 11:07:05 by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Lob;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

/**
 * QrtzBlobTriggers generated by hbm2java
 */
@Entity
@Table(name = "QRTZ_BLOB_TRIGGERS")
public class QrtzBlobTriggers implements java.io.Serializable {

    private QrtzTriggersId id;
    private QrtzTriggers qrtzTriggers;
    private byte[] blobData;

    public QrtzBlobTriggers() {
    }

    public QrtzBlobTriggers(QrtzTriggers qrtzTriggers) {
        this.qrtzTriggers = qrtzTriggers;
    }

    public QrtzBlobTriggers(QrtzTriggers qrtzTriggers, byte[] blobData) {
        this.qrtzTriggers = qrtzTriggers;
        this.blobData = blobData;
    }

    @EmbeddedId
    @AttributeOverrides({ @AttributeOverride(name = "schedName", column = @Column(name = "SCHED_NAME", nullable = false, length = 120)), @AttributeOverride(name = "triggerName", column = @Column(name = "TRIGGER_NAME", nullable = false, length = 200)),
            @AttributeOverride(name = "triggerGroup", column = @Column(name = "TRIGGER_GROUP", nullable = false, length = 200)) })
    public QrtzTriggersId getId() {
        return this.id;
    }

    public void setId(QrtzTriggersId id) {
        this.id = id;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn
    public QrtzTriggers getQrtzTriggers() {
        return this.qrtzTriggers;
    }

    public void setQrtzTriggers(QrtzTriggers qrtzTriggers) {
        this.qrtzTriggers = qrtzTriggers;
    }

    @Column(name = "BLOB_DATA")
    @Lob
    public byte[] getBlobData() {
        return this.blobData;
    }

    public void setBlobData(byte[] blobData) {
        this.blobData = blobData;
    }

}
